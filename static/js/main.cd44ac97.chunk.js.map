{"version":3,"sources":["Header/index.jsx","Projects/projectsModal.jsx","Projects/index.jsx","Home/index.jsx","Contacts/index.jsx","CV/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","Image","src","roundedCircle","to","ProjectModal","msg","imageUrl","useState","show","setShow","javaScriptProjects","setJavaScriptProjects","reactProjects","setReactProjects","htmlProjects","setHtmlProjects","handleClose","useEffect","fetch","method","headers","then","res","status","Error","json","resData","jsArray","reactArray","htmlArray","forEach","e","name","includes","push","url","html_url","catch","err","console","log","Card","onClick","style","width","backgroundColor","margin","cursor","Img","variant","Body","Title","Modal","onHide","closeButton","map","rel","target","href","Footer","Button","Projects","Home","Contacts","title","height","frameborder","webkitallowfullscreen","mozallowfullscreen","allowfullscreen","App","path","render","exact","CV","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cd44ac97.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\nimport './index.css';\nimport { Image} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Link\n} from 'react-router-dom';\n\nconst Header = () => {\n    \n\n    return(\n        <Fragment>\n            <div  className=\"nav\" >\n                <div className=\"inner\">\n                    <div className='image-container'>\n                        <Image  src=\"/my-app/img.jpg\" roundedCircle  />\n                    </div>\n                    <ul className=\"header-menu\">\n                        <li><Link to=\"/my-app\">About</Link></li>\n                        <li><Link to=\"/my-app/projects\">Projects</Link></li>\n                        <li><Link to=\"/my-app/contacts\">Contacts</Link></li>\n                        <li><Link to=\"/my-app/cv\">CV</Link></li>\n                        {/* <li><a target=\"_blank\" href=\"/my-app/my-cv.pdf\">CV</a></li> */}\n                    </ul>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Header;","import React, {useState, useEffect} from 'react';\r\nimport { Button, Modal, } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card} from 'react-bootstrap';\r\nimport './projectModal.css'\r\n\r\nfunction ProjectModal({msg, imageUrl}) {\r\n    const [show, setShow] = useState(false);\r\n    const [javaScriptProjects, setJavaScriptProjects] = useState('');\r\n    const [reactProjects, setReactProjects] = useState('');\r\n    const [htmlProjects, setHtmlProjects] = useState('');\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        fetch('https://api.github.com/users/vasivanov/repos', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }).then(res => {\r\n            \r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Failed');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(resData => {\r\n            let jsArray = [];\r\n            let reactArray = [];\r\n            let htmlArray = [];\r\n            resData.forEach(e => {\r\n                if(e.name.includes('Back') || e.name.includes('JavaScript')){\r\n                    jsArray.push({name: e.name, url: e.html_url});\r\n                } else if(e.name.includes('Graph') || e.name.includes('React') || e.name.includes('react')) {\r\n                    reactArray.push({name: e.name, url: e.html_url});\r\n                } else if(e.name.includes('HTML') || e.name.includes('site')) {\r\n                    htmlArray.push({name: e.name, url: e.html_url});\r\n                }\r\n            })\r\n            setJavaScriptProjects(jsArray);\r\n            setReactProjects(reactArray);\r\n            setHtmlProjects(htmlArray);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }, [])\r\n  \r\n    return (\r\n      <>\r\n        {/* <button style={{backgroundColor: '#191D2B', border: 'none', color: 'white', borderRadius: '5px', padding: '0.3em 0.5em'}} variant=\"primary\" onClick={handleShow}>\r\n          {msg}\r\n        </button> */}\r\n         <Card onClick={handleShow} style={{ width: '18rem', backgroundColor: '#10121B', margin: '3em 0', cursor: 'pointer'}}>\r\n            <Card.Img variant=\"top\" src={imageUrl} />\r\n            <Card.Body>\r\n                <Card.Title>{msg}</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n        {msg === 'JavaScript Projects' && <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{msg}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              {javaScriptProjects ?  javaScriptProjects.map(e => {\r\n                  return(\r\n                      <div className=\"repo-info\" > \r\n                          <p>{e.name}</p>\r\n                          <a rel=\"noopener noreferrer\" target='_blank' href={e.url}>Link to repo</a>\r\n                      </div>\r\n                  )\r\n              }) : null}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>}\r\n        {msg === 'React Projects' && <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{msg}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              {reactProjects ?  reactProjects.map(e => {\r\n                  return(\r\n                      <div className=\"repo-info\">\r\n                          <p>{e.name}</p>\r\n                          <a rel=\"noopener noreferrer\" target='_blank' href={e.url}>Link to repo</a>\r\n                      </div>\r\n                  )\r\n              }) : null}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>}\r\n        {msg === 'HTML 5 CSS 3 Projects' && <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{msg}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              {htmlProjects ?  htmlProjects.map(e => {\r\n                  return(\r\n                      <div className=\"repo-info\">\r\n                          <p>{e.name}</p>\r\n                          <a rel=\"noopener noreferrer\" target='_blank' href={e.url}>Link to repo</a>\r\n                      </div>\r\n                  )\r\n              }) : null}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>}\r\n        \r\n      </>\r\n    );\r\n  }\r\n\r\nexport default ProjectModal;","import React from 'react';\nimport './index.css';\nimport Header from '../Header';\nimport ProjectsModal from './projectsModal';\n\n\n\n\nconst Projects = () => {\n    return(\n        <div className=\"content\">\n            <Header/>\n            <div className=\"info\">\n                <div className=\"title\">\n                    <h2>PROJECTS</h2>\n                </div>\n                <div className=\"projects-list\">\n                    <ProjectsModal msg='React Projects' imageUrl='https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg' />\n                        {/* <Card style={{ width: '18rem', backgroundColor: '#10121B', margin: '3em 0'}}>\n                        <Card.Img variant=\"top\" src=\"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\" />\n                        <Card.Body>\n                            <Card.Title><ProjectsModal msg='Check out my React Projects'></ProjectsModal></Card.Title>\n                        </Card.Body>\n                        </Card> */}\n                    <ProjectsModal msg='HTML 5 CSS 3 Projects' imageUrl='/my-app/pngwing.com.png' />\n                    {/* <Link className='card-title' to=\"/my-app\">\n                        <Card style={{ width: '18rem', backgroundColor: '#10121B', margin: '4em 0'}}>\n                        <Card.Img variant=\"top\" src=\"/my-app/pngwing.com.png\" />\n                        <Card.Body>\n                            <Card.Title>HTML 5 CSS 3 Projects</Card.Title>\n                        </Card.Body>\n                        </Card>\n                    </Link> */}\n                    <ProjectsModal msg='JavaScript Projects' imageUrl='/my-app/kisspng-node-js-javascript-web-application-express-js-comp-5ae0f84e5e7537.0464945815246930703869 (1).png' />\n                    {/* <Link className='card-title' to=\"/my-app\">\n                        <Card style={{ width: '18rem', backgroundColor: '#10121B', margin: '-1em 0'}}>\n                        <Card.Img variant=\"top\" src=\"/my-app/kisspng-node-js-javascript-web-application-express-js-comp-5ae0f84e5e7537.0464945815246930703869 (1).png\" />\n                        <Card.Body>\n                            <Card.Title>JavaScript Projects</Card.Title>\n                        </Card.Body>\n                        </Card>\n                    </Link> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Projects;","import React from 'react';\nimport './index.css';\nimport Header from '../Header';\nimport { SocialIcon } from 'react-social-icons';\n\nconst Home = () => {\n    return(\n        <div className='content'>\n            <Header/>\n            <div className=\"home-info\">\n                <h2>Hi, I am <span>Vasil Ivanov</span></h2>\n                <p>Highly organized and detail-oriented student from the Plovdiv University seeking an entry-level position as Front-End developer.</p>\n                <div>\n                    <SocialIcon  target=\"_blank\" url=\"https://www.facebook.com/vasil.ivanov.336/\" />\n                    <SocialIcon  target=\"_blank\" url=\"https://github.com/vasIvanov\" />\n                </div>\n                {/* <embed src=\"/my-app/my-cv.pdf\" type=\"application/pdf\" width=\"100%\" height=\"600px\" /> */}\n\n                {/* <div className='social-buttons' >\n                    <a className='facebook-button social' target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/vasil.ivanov.336/\">Facebook</a>\n                    <a className='github-button social' target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/vasIvanov\">GitHub</a>\n                </div> */}\n                {/* <a className='cv-download' href=\"my-app/my-cv.pdf\" download>Download CV</a> */}\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React from \"react\";\nimport \"./index.css\";\nimport Header from \"../Header\";\n\nconst Contacts = () => {\n  return (\n    <div className=\"content\">\n      <Header />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h2>CONTACTS</h2>\n        </div>\n        <div className=\"contacts-list\">\n          <div className=\"email contact\">\n            <h4>Email</h4>\n            <p>vasivanov.info@gmail.com</p>\n          </div>\n          <div className=\"phone contact\">\n            <h4>Phone Number</h4>\n            <p>0896599705</p>\n          </div>\n          <div className=\"github contact\">\n            <h4>GitHub</h4>\n            <p>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/vasIvanov\"\n              >\n                github.com/vasIvanov\n              </a>\n            </p>\n          </div>\n          <div className=\"facebook contact\">\n            <h4>Facebook</h4>\n            <p>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://www.facebook.com/vasil.ivanov.336/\"\n              >\n                facebook.com/vasil.ivanov.336\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React from 'react';\r\nimport './index.css';\r\nimport Header from '../Header';\r\n\r\n\r\n\r\n\r\nconst Projects = () => {\r\n    return(\r\n        <div className=\"content\">\r\n            <Header/>\r\n            <div className=\"info\">\r\n                <div className=\"title\">\r\n                    <h2>My CV</h2>\r\n                </div>\r\n                {/* <embed  wmode=\"transparent\" src=\"/my-app/vasil-ivanov-cv.pdf\" type=\"application/pdf\" width=\"100%\" height=\"1190px\" />\r\n                 */}\r\n                <iframe title='cv' src=\"/my-app/Vasil-Ivanov-CV.pdf\" width=\"100%\" height=\"1190px\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Projects from './Projects';\nimport Home from './Home';\nimport Contacts from './Contacts';\nimport CV from './CV';\n\n\nfunction App() {\n  return (\n      <Router>\n      <Switch>\n        <Route path='/my-app'  render={Home} exact/>\n        <Route path='/my-app/projects'  render={Projects} />\n        <Route path='/my-app/contacts'  render={Contacts} />\n        <Route path='/my-app/cv'  render={CV} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}